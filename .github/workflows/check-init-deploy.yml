name: Check Initial Deployment

on:
  workflow_call:
    inputs:
      environment_id:
        required: true
        type: string
      environment_suffix:
        required: false
        type: string
      infra_folder_path:
        required: false
        type: string
        default: infra
    outputs:
      initial-deployment:
        value: ${{ jobs.check-initial-deployment.outputs.initial-deployment }}
        description: Whether it's an initial deployment or not

jobs:
  check-initial-deployment:
    runs-on: ubuntu-latest
    outputs:
      initial-deployment: ${{ steps.check-init-deploy.outputs.INITIAL_DEPLOYMENT }}
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Extract Deployment Variables to Output
        id: extract-deployment-envs
        run: |
          set -o allexport

          if [ -f "${{ inputs.infra_folder_path }}/environments/common.env" ]; then
            source ${{ inputs.infra_folder_path }}/environments/common.env
          else
            echo "No common.env file has been found. Disregarding it."
          fi
          source ${{ inputs.infra_folder_path }}/environments/${{ inputs.environment_id }}.env

          if [[ -z $ProductName || -z $AWS_REGION || -z $AWS_ACCOUNT_ID || -z $AWS_ACCOUNT_NAME || -z $AWS_CD_ROLE || -z $AWS_CF_ROLE ]]; then
            echo -e "All necessary parameters must be defined, which are:\n- ProductName\n- AWS_REGION\n- AWS_ACCOUNT_ID\n- AWS_ACCOUNT_NAME\n- AWS_CD_ROLE\n- AWS_CF_ROLE"
            exit 1
          else
            echo "All necessary parameters are defined"
          fi

          # shellcheck disable=SC2129
          echo "ProductName=$ProductName" >> "$GITHUB_OUTPUT"
          echo "AWS_REGION=$AWS_REGION" >> "$GITHUB_OUTPUT"
          echo "AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID" >> "$GITHUB_OUTPUT"
          echo "AWS_ACCOUNT_NAME=$AWS_ACCOUNT_NAME" >> "$GITHUB_OUTPUT"
          echo "AWS_CD_ROLE=$AWS_CD_ROLE" >> "$GITHUB_OUTPUT"
          echo "AWS_CF_ROLE=$AWS_CF_ROLE" >> "$GITHUB_OUTPUT"

      - name: Configure AWS Credentials
        id: configure-aws-creds
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          role-to-assume: ${{ steps.extract-deployment-envs.outputs.AWS_CD_ROLE }}
          aws-region: ${{ steps.extract-deployment-envs.outputs.AWS_REGION }}

      - name: Check if it's initial deployment
        id: check-init-deploy
        run: |
          # shellcheck disable=SC2016
          INPUT_ENV_SUFFIX=${{ inputs.environment_suffix }}
          STACK_NAME_SUFFIX=""
          echo $INPUT_ENV_SUFFIX
          if [[ -n $INPUT_ENV_SUFFIX ]]; then
              STACK_NAME_SUFFIX="-${INPUT_ENV_SUFFIX}"
          fi
          STACK_NAME="${{ steps.extract-deployment-envs.outputs.ProductName }}${STACK_NAME_SUFFIX}"
          echo $STACK_NAME
          if aws cloudformation describe-stacks --stack-name $STACK_NAME; then
              echo "Deployment exists"
              echo "INITIAL_DEPLOYMENT=false" >> "$GITHUB_OUTPUT"
          else
              echo "This is an initial deployment"
              echo "INITIAL_DEPLOYMENT=true" >> "$GITHUB_OUTPUT"
          fi
