on:
  workflow_call:
    inputs:
      BUILDX_LOCAL_CACHE_DIR:
        required: false
        type: string
      codeartifact_encrypted_token_dev:
        required: false
        type: string
      codeartifact_encrypted_token_prod:
        required: false
        type: string
      is_private:
        required: false
        type: string
        default: true
        description: Whether the swagger definition should be public or private
      lint:
        required: false
        type: boolean
        default: false
        description: Whether to lint the swagger definition
      linter_ruleset:
        required: false
        type: string
        description: The URL of the ruleset to use for linting
        default: https://cdn.orfium.com/platform/prod/api-standardization/ruleset-latest.yml
    secrets:
      SWAGGERHUB_TOKEN:
        required: true
      GPG_CODEARTIFACT_TOKEN_PASSPHRASE:
        required: false

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

jobs:
  swaggerhub:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:master
      
      - name: Set up Local Cache for Docker layers
        if: "${{ inputs.BUILDX_LOCAL_CACHE_DIR != '' }}"
        uses: actions/cache@v4
        with:
          path: ${{ inputs.BUILDX_LOCAL_CACHE_DIR }}
          key: ${{ runner.os }}-buildx-local-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-local-
      
      - name: Decrypt Codeartifact dev token
        if: "${{ inputs.codeartifact_encrypted_token_dev != '' }}"
        run: |
          token=$(gpg --decrypt --quiet --batch --passphrase "${{ secrets.GPG_CODEARTIFACT_TOKEN_PASSPHRASE }}" --output - <(echo "${{ inputs.codeartifact_encrypted_token_dev }}" | base64 --decode))
          echo "::add-mask::$token"
          echo "CODEARTIFACT_TOKEN_DEV=$token" >> "$GITHUB_ENV"

      - name: Decrypt Codeartifact prod token
        if: "${{ inputs.codeartifact_encrypted_token_prod != '' }}"
        run: |
          token=$(gpg --decrypt --quiet --batch --passphrase "${{ secrets.GPG_CODEARTIFACT_TOKEN_PASSPHRASE }}" --output - <(echo "${{ inputs.codeartifact_encrypted_token_prod }}" | base64 --decode))
          echo "::add-mask::$token"
          echo "CODEARTIFACT_TOKEN_PROD=$token" >> "$GITHUB_ENV"

      - name: Build local image from Cache
        if: "${{ inputs.BUILDX_LOCAL_CACHE_DIR != '' }}"
        uses: docker/build-push-action@v6
        with:
          push: false
          load: true
          target: local
          tags: ${{ github.event.repository.name }}
          cache-from: type=local,src=${{ inputs.BUILDX_LOCAL_CACHE_DIR }}
          secrets: |
            CODEARTIFACT_TOKEN_DEV=${{ env.CODEARTIFACT_TOKEN_DEV }}
            CODEARTIFACT_TOKEN_PROD=${{ env.CODEARTIFACT_TOKEN_PROD }}
      
      - name: Build local image
        if: "${{ inputs.BUILDX_LOCAL_CACHE_DIR == '' }}"
        uses: docker/build-push-action@v6
        with:
          push: false
          load: true
          target: local
          tags: ${{ github.event.repository.name }}
          secrets: |
            CODEARTIFACT_TOKEN_DEV=${{ env.CODEARTIFACT_TOKEN_DEV }}
            CODEARTIFACT_TOKEN_PROD=${{ env.CODEARTIFACT_TOKEN_PROD }}

      - name: Create Swaggerhub Definition
        run: make swaggerhub
      
      - uses: stoplightio/spectral-action@v0.8.11
        if: "${{ inputs.lint }}"
        with:
          file_glob: 'test.yaml'
          spectral_ruleset: ${{ inputs.linter_ruleset }}

      - name: Post to Swaggerhub
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        env:
          SWAGGERHUB_TOKEN: ${{ secrets.SWAGGERHUB_TOKEN }}
          IS_PRIVATE: ${{ inputs.is_private }}
        run: |
          curl --fail -X POST "https://api.swaggerhub.com/apis/OrfiumTeam/${{ github.event.repository.name }}?isPrivate=$IS_PRIVATE&force=true" -H "Authorization: $SWAGGERHUB_TOKEN" -H "Content-Type: application/yaml" --data-binary "@test.yaml"
